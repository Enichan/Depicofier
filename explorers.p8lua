-- eXPLORERS
-- BY rEMY dEVAUX

-- originally made for alakajam

-- post-jam changelog:
-- - added title-screen intro/outro
-- - changed title from explorer to explorers
-- - enhanced title-screen
-- - added birds
-- - animated percentage going up
-- - improved camera
-- - added map border vfx
-- - made map borders push back rafts
-- - optimized rendering with (more) object culling
-- - added explorer voices
-- - added moai
--
-- - fixed skull and crystal texts being inversed
-- - fixed explorers bringing rafts further inland and getting stranded
-- - fixed explorers origin direction being inverted

--for i,v in ipairs(split"‚ô•‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚ô•,‚òÖ tHANK yOU! ‚òÖ,‚Ä¶ FOR BUYING ‚Ä¶,eXPLORERS dELUXE,‚ô•‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚ô•") do
for i,v in ipairs(split"‚ô•‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚ô•,explorers deluxe,IS AVAILABLE ON, ‚òÖ itch.io! ‚òÖ,‚ô•‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚ô•") do
 menuitem(i,v,function() end)
end

sfx(27,3)
plt=split"0x01,0x8c,0x0c,0x84,0x04,0x8e,0x0f,0x83,0x03,0x0b,0x8a,0x87,0x09,0x08,0x82"
for i=0,31 do
 for j=1,15 do
  pal(j,plt[j-i\2] or 0,1)
 end
 flip()
end

poke(0x5f2e,1)

drk,lit={},{}
for i=0,15 do
 lit[i],drk[i]=sget(i,4),sget(i,6)
end

function _init()
 mmoai={}
 all_colors_to()
 camera()
 init_objects(split"raft,bot,item,bird,moai")
 gen_map()
 cls()flip()
 sfx(28,3)

 pal(plt,1)
 
-- local plt = split"0x01,0x8c,0x0c,0x84,0x04,0x8e,0x0f,0x83,0x03,0x0b,0x8a,0x87,0x09,0x08,0x82"
-- 
-- for i=0,15 do
--  pal(i,plt[drk[drk[i]]] or 0,1)
-- end
 
 dpctg,pctg,pctgy,wavt,wavi,lndn = 0,0,-16,9,0,0
 title,titlet,winda,haggle,hagcld,credt = true, 0, rnd(1),false,1,0

 nwinda=winda
 
 local mx,my
 repeat
  mx,my=rnd(64)\1,rnd(48)\1
 until mget(mx|((my&0x20)<<1),my&31)==0
 player = new_player((mx<<5)|16,(my<<5)|16)
 camx,camy = player.x-64,player.y-64
 
 for i=0,15 do
  local mx,my
  repeat
   mx,my=rnd(64)\1,rnd(48)\1
  until mget(mx|((my&0x20)<<1),my&31)==0
  local b=new_bot((mx<<5)|16,(my<<5)|16)
  for j=1,100 do
   upd_bot(b)
  end
 end
 
 for i=0,31 do
  local x,y
  repeat
   x=rnd(256)
   y=rnd(192)
  until get_map(x,y)~=0
  new_item((x<<3)|4,(y<<3)|4,i&3)
 end
 
 for i=0,15 do
  local x,y
  repeat
   x=rnd(256)\1
   y=rnd(192)\1
  until get_map(x,y)~=0
  new_item((x<<3)|4,(y<<3)|4,(i&3)|4)
 end
 
-- new_bot(player.x+8,player.y)
 camera(camx,camy)
end

function _update()
 srand(t()<<4)
 
 wavt+=.033
 lndn/=484
 if wavt>2+lndn then
  local ch=wavi&1+1
  if stat(16+ch)<0 then
   wavi+=1
   sfx(8+rnd(4),(wavi&1)+1)
   wavt=rnd(2)
  end
  
  ch=(ch&1)+1
  if stat(16+ch) and chance(1) then
   bird_sfx(53+rnd(5)\1,ch)
  end
 end
 
 lndn=0
 
-- if btnp(4,1) then
--  start_haggle(objs.bot[1])
-- end
 
 if chance(1) then
  nwinda=rnd(1)
 end
 
 local dw=angle_diff(nwinda,winda)
 if abs(dw)>0.1 then
  winda-=0.02*dw
 end
 
 camera(camx,camy)
 update_objects()
 for i=1,8 do new_birds() end
 
 srand(t()<<1)
 if haggle then
  upd_haggle()
 elseif hagcld>0 then
  hagcld-=0.033
 end
 
 if btn(5) then
  local fy=256
  sfx(23)
  while btn(5) do
   fy=lerp(fy,92-6,0.1)
  
   draw_minimap(64,fy)
   flip()
  end
  sfx(24)
  while fy<256 do
   fy=lerp(fy,300,0.1)
   _draw()
   draw_minimap(64,fy)
   flip()
  end
 end
 
 for y=-2,2 do
 for x=-2,2 do
  local mx=min((player.x>>5)+x,63)
  local my=min((player.y>>5)+y,47)
  mx,my=mx|((my&0x20)<<1),my&31
  
  mset(mx,my,mget(mx,my)|0x80)
 end
 end
 
 local v=player.onraft and 32 or 64
 camx=lerp(camx,player.x-64+v*player.vx,0.05)
 
 if haggle then
  camy=lerp(camy,player.y-32,0.05)
 else
  camy=lerp(camy,player.y-64+v*player.vy,0.05)
 end
end

function _draw()
 cls(2)
-- draw_face(face,16,16,btn(4,1),btn(5),t())
 
 camera(flr(camx+.5),flr(camy+.5))
 draw_map(camx\8,camy\8)
 for s in group"moai" do
  spr(0x8c, s.x-16, s.y-16, 4, 4)
 end
 
 draw_objects(0,2)
 
 draw_leaves(camx\8,camy\8)
 
 pal(11,0)
 draw_objects(3,4)
 all_colors_to()
 
 camera()
 
 if haggle then
  drw_haggle()
 end
 
 
 if title or titlet>0 then
  titlet=mid(titlet+(title and .02 or-.02),0,2)
  local v=sqr(sin(min(titlet,1)*.25))
  local v0=sqr((1-cos(min(titlet*2,1)*.5))>>1)
  local v2=sqr(sin(mid(titlet-.5,0,1)*.25))*128
 
  if title then
   rectfill(0,0,127,63-v0*24,0)
   rectfill(0,64+v0*24,127,127,0)
  else
   rectfill(0,-1,127,v0*40-1,0)
   rectfill(0,129-v0*40,128,127,0)
  end
 
  local x,cs=28,split"3,2,1,2,3"
  
  camera(0,48-v*48)
  
  for i=0,8 do
   local s=8+(i\5)*16+(i%5)
   local x=x+i*8
   local y=12+2*cos(t()*.45+(i>>3))
   local c=cs[flr(i+t()*16)%64] or 7
   
   pal(7,0)
   spr(s,x-1,y)
   spr(s,x+1,y)
   spr(s,x,y-1)
   spr(s,x,y+1)
   spr(s,x+1,y-1)
   spr(s,x-1,y+1)
   pal(7,c)
   spr(s,x,y)
  end
  pal(7,7)
  
  super_print("BY rEMY  ",96,28)
  pal(9,0)
  spr(0x17,106,27)
  spr(0x17,105,26,1,1,true,true)
  pal(9,9)
  
  camera()
  super_print("üÖæÔ∏è TO CONFIRM PROMPTS ",-64+v2,92)
  super_print("‚ùé TO VIEW MAP ",192-v2,102)
  
  credt += 1
  local credits = "      tHIS GAME WAS MADE BY rEMY dEVAUX  -‚ô•-  sPECIAL THANKS TO: bENJAMIN sOULE, lISA sCHAEFFER, jOSEPH wHITE, eLODIE pRADEL, cOCO, pICO  -‚ô•-  tHANK YOU TO MY pATREON SUPPORTERS: ‚òÖbLAS, dAN lEWIS, dAN rEES-jONES, fLO dEVAUX, jEARL, jOEL jORGENSEN, jOSEPH wHITE, mARTY kOVACH, pAUL nGUYEN, bBSAMURAI, bERKFREI, rOTATETRANSLATE, cOLE sMITH, dAVID cOLE, eIYERON, eLIAS aLONSO, eLIOTT, rAPHAEL gASCHIGNARD, sAM lOESCHEN, aMY, aNNE lE cLECH, gRUBER, jAKUB wASILEWSKI, pIERRE b., sEAN s. lEBLANC, sIMON sT„Çå‚úΩLHANDSKE, sLONO, vAPORSTACK  -‚ô•-  aND THANK you FOR PLAYING!!"
  local x,y = 256-(credt)%(#credits*4+400), 129-v0*7
  
  print(credits, x, y+1, 1)
  print(credits, x, y, 2)
  
  if titlet==2 and (t()%2<1.5) then
   super_print("[pRESS üÖæÔ∏è] ",64,116)
  end
  
  if btn(4) and title then
   title,titlet=false,1.5
   sfx(30,3)
  end
 else
  pctgy=lerp(pctgy,2.5,0.1)
  
  if pctg>96 and pctg<100 then
   pctg=100
   music(0)
  end
  
  if dpctg<pctg then
   dpctg+=0.06
  end
  
  if dpctg >= 100 then
   super_print("‚òÖ 100% ‚òÖ  ",63,pctgy)
   super_print("~ wELL dONE! ~",63,pctgy+10)
  else
   local str=sub(tostr(dpctg),1,4).."%"
   super_print(str,63,pctgy)
  end
 end
 
 if stat(1)<0.8 then
  count_pctg()
 end

-- if btn(5,1) then
--  print(stat(1),0,0,7)
-- end
end

function super_print(str,x,y,c)
 x-=#str*2
 color(0)
 print(str,x-1,y)
 print(str,x+1,y)
 print(str,x,y-1)
 print(str,x,y+1)
 print(str,x+1,y-1)
 print(str,x-1,y+1)
 
 print(str,x,y,c or 7)
end


function start_haggle(b)
 player.haggle,b.haggle,player.vx,player.vy,b.vx,b.vy=b,true,0,0,0,0
 haggle,hagt,hagstrt,hagcld=true,0,true,3
 
 hstep,hline,talkin=1,srnd "hI... wHAT DO YOU WANT?,HUM.. hELLO?,wHAT?,... yOU WANT SOMETHING?,yES?,wANNA TALK?,wHAT'S WITH YOU SAILOR?,mAKE IT QUICK. pLEASE."
 
 sfx(22,3)
end

function end_haggle()
 player.haggle.haggle, player.haggle, haggle, stophag=nil
end

function upd_haggle()
 local b=player.haggle
 if stophag then
  hagt=max(hagt-0.33,0)
  if hagt<=0 then
   end_haggle()
  end
 else
  hagt=min(hagt+0.33,5)
 end
 
 if hagt>=5 and hagstrt and not stophag then
  talkin=0
  hagstrt=false
 end
 
 if talkin and talkin<#hline then
  talkin+=btn(4) and 2 or .5
  local chr=ord(hline, talkin)
  if (talkin%1<.5 or btn(4)) and chr~=32 then
   srand(chr)
--   local a=0x3530
--   poke(0x3530,(rnd(16)+b.tone)|(srnd"0,1"<<6))
----   poke(a|1,((rnd(6)&7)<<1)|((rnd(6)&7)<<4))
--   poke(0x3531,(((rnd(6)&7)+1)<<1)|((srnd"3,4,5")<<4))
--   poke(0x3571,4+rnd(12)&0xff)
   poke2(0x3530,0x8b00|(irnd(16)+b.tone)|(irnd(4)<<6)|(irnd(6)<<12))
   sfx(12,3)
   srand(t())
  end
  
  if talkin>=#hline then
   if hstep==1 then
    hchoice={
     "wHERE'R YOU COMIN FROM?",
     "cAN WE HELP EACH OTHER?",
     srnd "yOUR ASS LOOKS GREAT!,i'M LOVING YOUR LOOK!,yOU'RE VERY GOODLOOKING!,i THINK i'M IN LOVE.,cOULD WE... KISS?,hOW ARE YOU THIS CUTE?"
    }
   elseif hstep==2 then
    hchoice={
     "wOULD YOU HELP ME?",
     "aH, TOO BAD."
    }
   elseif hstep==4 then
    hchoice={
     "wHERE'R YOU COMIN FROM?",
     "cAN WE HELP EACH OTHER?"
    }
   elseif hstep==3 then
    if b.frdly then
     map_transfer(b)
     hchoice={"nICE, BYE!"}
     hstep=7
    else
     talkin=0
     if haggle_items(b) then
      hstep=5
      hline=srnd "yES!,pLEASURE DOIN' BIZNES',yOU GOT IT.,hAH! tHIS WILL SERVE!,dEAL DEALT AND DONE!"
      b.frdly=true
      b.forth=true
     else
      hstep=6
      hline=srnd "tHANKS BUT NO DEAL.,mMMH NOT GOOD ENOUGH!,fOR THIS?! nO WAY!,cUTE BUT NO."
     end
    end
   elseif hstep==5 then
    map_transfer(b)
    hchoice={srnd "nICE! bYE!,gREAT! tHANKS!"}
    hstep=7
   elseif hstep==6 then
    hchoice={srnd "aH.,oK BYE THEN.,yOU'RE KEEPING IT?"}
    hstep=7
   end
   cho=1
  end
 end
 
 
 if hchoice then
  if btnp(3) then
   cho=min(cho+1,#hchoice)
  end
  if btnp(2) then
   cho=max(cho-1,1)
  end
  
  if btnp(4) then
   if hstep==1 then -- meet
    if cho==1 then
     hstep=2
    elseif cho==2 then
     hstep=3
    elseif cho==3 then
     hstep=4
    end
   elseif hstep==2 then
    if cho==1 then
     hstep=3
    else
     stophag=true
    end
   elseif hstep==4 then
    if cho==1 then
     hstep=2
    elseif cho==2 then
     hstep=3
    end
   elseif hstep==7 then
    stophag=true
   end
   
   if hstep==2 then
    if b.forth then
     local direw={[-1]="wEST","eAST"}
     local dirns={[-1]="nORTH","sOUTH"}
     local dx,dy=b.stx-b.x,b.sty-b.y
     local dir=abs(dx)>abs(dy) and direw[sgn(dx)] or dirns[sgn(dy)]

     hline="i COME FROM THE "..dir.."."
    else
     hline=srnd"wHY WOULD I TELL YA?,wHO ARE YOU AGAIN?"
    end
   elseif hstep==3 then
    if b.frdly then
     hline=srnd"sURE FRIEND!,hERE YOU GO!"
    elseif b.forth then
     hline=srnd"wANT M'MAP? cOULD HAPPEN,lET'S MAKE IT HAPPEN"
    else
     hline=srnd"hOW MUCH'S IT WORTH T'YA,lET'S SEE WHAT YOU HAVE"
    end
   elseif hstep==4 then
    if b.vain then
     b.forth=true
     hline=srnd "tHANKS! y'RE NOT TOO BAD,rEALLY?? oH MY!,yA'RE PRETTY CUTE TOO.,hAH! oNE GETS THISRTY EH?,yOU HAVE GOOD TASTE.,yA'RE TOO KIND.,wAS THINKING THE SAME!"
    else
     hline=srnd "yA'RE CREEPY.,mMH NOT INTERESTED.,i'M NOT FALLING FOR THAT.,pLEASE STOP.,lEAVE ME ALONE.,qUIT IT.,tRYNA BUTTER ME UP?"
    end
   end

   talkin,hchoice=0
   if stophag then
    talkin=nil
    sfx(21,3)
   end
  end
 end
 
end

function drw_haggle()
 local b=player.haggle

 local r=min(hagt*16,40)
 local y=128-r
 
 circfill(127-r/4,110,r,0)
 circ(127-r/4,110,r-2,3)
 
 rectfill(0,y-1,127,127,0)
 line(1,y,92,y,2)
 line(2,y,91,y,3)
 line(3,y,90,y,7)
 
 local dx=hagt*7.5
 draw_face(b.k,137-dx,87,talkin and talkin<#hline,b.forth,time(),b.skn,b.hr)
 
 if not talkin or stophag then return end

 y+=4
 local str=sub(hline,1,talkin+1)
 print(str,0,y+2,1)
 print(str,0,y+1,2)
 print(str,0,y,7)
 y+=1
 
 local x=3
 if hchoice then
  for i,s in pairs(hchoice) do
   local y=y+i*8
   
   if i==cho then
    local x=x+1
    spr(0x1c,x-5,y)
    print(s,x,y+2,1)
    print(s,x,y+1,2)
    print(s,x,y,7)
   else
    print(s,x,y+1,1)
    print(s,x,y,3)
   end
   
  end
 end

end

function map_transfer(b)
 local fy=256
 sfx(25,0)
 for i=0,95 do
  fy=lerp(fy,92-6,0.1)
  
  local v=b.hist[i]
  for j=0,31 do
   local mx=((i&1)<<5)|j
   local my=i>>1
   mx,my=mx|((my&0x20)<<1),my&31
   
   local bit=((v<<j)&0x8000)>>>8
   mset(mx,my,mget(mx,my)|bit)
  end
  
  if i&1==1 then
   fy=lerp(fy,92,0.1)
   draw_minimap(64,fy)
   flip()
  end
 end
 
 for i=0,15 do
  draw_minimap(64,fy)
  flip()
 end
 
 sfx(24,0)
 while fy<256 do
  fy=lerp(fy,300,0.1)
  _draw()
  draw_minimap(64,fy)
  flip()
 end
end

function haggle_items(b)
 camera(-16,-48)
 local ch,ok=1
 local pl,pr
 local ti=10
 while not ok do
  if ti>0 then
  ti-=1
  end
  
  if btn(0) then
   if not pl then
   ch=max(ch-1,1)
   pl=true
   end
  else
   pl=false
  end
  
  if btn(1) then
   if not pr then
   pr=true
   ch=min(ch+1,8)
   end
  else
   pr=false
  end
 
  rectfill(-16,0,96+16,32,0)
  local str="gIVE WHAT?"
  print(str,47-#str*2,3,1)
  print(str,47-#str*2,2,2)
  print(str,47-#str*2,1,7)
  local y=10
  for i=1,8 do
   local x=(i-1)*12+2
   rect(x-1,y-1,x+8,y+8,1)
   local s=player.items[i]
   if s then
    spr(0x70+s,x,y)
   end
   
   if ch==i then
    spr(22,x,y+8)
    local str
    if s then
     str=items[s+1]
    else
     str="gO bACK"
    end
    local xx=x-#str*2+3
    local yy=y+15
    print(str,xx,yy+2,1)
    print(str,xx,yy+1,2)
    print(str,xx,yy,7)
    
    ok=(btn(4) and ti<=0)
   end
  end
  
  flip()
 end
 
 n=player.items[ch]
 
 if not n then
  stophag,talkin=true
  sfx(21,3)
  return false
 end
 
 deli(player.items,ch)

 if b.forth or n>=4 then
  return true
 else
  sfx(26)
  return false
 end
end

function count_pctg()
 if pctg==100 then return end

 local n=0
 for y=0,47 do
  for x=0,63 do
--   local m=mget(x,y)
   local m=mget(x|((y&0x20)<<1),y&31)
   if m&0x80>0 then
    n+=1
   end
  end
 end
 
 pctg = n/3072*100
end

-->8
-- * game objects *

function upd_player(s)
 upd_chr(s,
  (btn(0) and -1 or 0)+
  (btn(1) and 1  or 0),
  (btn(2) and -1 or 0)+
  (btn(3) and 1  or 0)
 )
 
 s.rafttim=max(s.rafttim-0.25,0)
 
 if s.onraft then
  if get_map(s.x>>3,s.y>>3)>0 and s.rafttim<=0 then
   s.onraft=false
   s.rafttim=2.5
   new_raft(s)
   sfx(19)
  end
 else
  if s.rafttim<=0 then
   if take_raft(s) then
    sfx(20)
   end
  end
  
  local i=collide_objgroup(s,"item")
  if i then
   local n=i.s
   add(s.items,n)
   deregister_object(i)
   new_text(items[n+1],s.x,s.y-8)
   if n<=4 then
    sfx(14)
   else
    sfx(13)
   end
  end
 end
 
 if not haggle and hagcld<=0 and not title then
  local b=collide_objgroup(s,"bot")
  if b then
   start_haggle(b)
  end
 end
end

function upd_bot(s)
 s.dirt-=0.033
 s.rafttim=max(s.rafttim-0.25,0)
 
 if s.dirt<0 then
  if s.onraft then
   s.dir+=got(0.25)
   s.dir%=1
  else
   if s.toraft<=0 and chance(75) then
    local d,r=0x7fff
    for rr in group("raft") do
     local dx,dy=rr.x-s.x,rr.y-s.y
     local dd=sqr(dx>>8)+sqr(dy>>8)
     if dd<d then
      d,r=dd,rr
     end
    end
    
    if r then
     s.dir=atan2(r.x-s.x,r.y-s.y)%1
    end
   else
    if chance(10) then
     s.dir=-1
    else
     s.dir+=got(0.5)
     s.dir%=1
    end
   end
  end
  
  s.dirt=1+rnd(2)
 end
 
 if s.dir>=0 then
  if abs(player.x-s.x)<64 or abs(player.y-s.y)<64 then
   upd_chr(s,.75*cos(s.dir),.75*sin(s.dir))
  else
   upd_chr(s,cos(s.dir),sin(s.dir))
  end
 else
  upd_chr(s,0,0)
 end
 
 if s.onraft then
  if get_map(s.x>>3,s.y>>3)>0 and s.rafttim<=0 then
   s.onraft=false
   s.toraft=10+rnd(10)
   new_raft(s)
  end
 elseif not s.haggle then
 
  s.toraft-=0.033
  
  if s.toraft<=0 then
   take_raft(s)
  end
 end
 
 s.histt-=0.033
 if s.histt<=0 then
  s.histt=2+rnd(1)

  for y=-2,2 do
  for x=-2,2 do
   local mx=mid((s.x>>5)+x,0,63)&0xffff
   local my=mid((s.y>>5)+y,0,47)&0xffff
   
   local a=(my<<1)|((mx>>5)&0xffff)
   s.hist[a]|=0x8000>>>(mx&31)
  end
  end
 end
end

function upd_chr(s,accx,accy)
 if s.haggle then return end

 if s.onraft then
  local acc=0.05+(_dbg and 1 or 0)

  s.vx+=accx*acc
  s.vy+=accy*acc
  
  s.vx+=(max(-s.x,0)-max(s.x-2048,0))>>10
  s.vy+=(max(-s.y,0)-max(s.y-1536,0))>>10
  
  s.x+=s.vx +0.1*cos(winda)
  s.y+=s.vy +0.1*sin(winda)
  
  s.vx*=0.95
  s.vy*=0.95
  
  local ma=1.1+(_dbg and 40 or 0)
  local dv=dist(s.vx,s.vy)
  if dv>ma then
   s.vx*=ma/dv
   s.vy*=ma/dv
  end
  
  s.rdt-=0.5
  if s.rdt<0 and not(abs(s.x-_camx-64)>72 or abs(s.y-_camy-64)>72) then
   add(rpls,{x=s.x,y=s.y,l=0})
   s.rdt=2
  end
 else
 
  local acc=0.5
  s.vx+=accx*acc
  s.vy+=accy*acc
  
  local xx=(s.x+4*s.vx)
  local yy=(s.y+4*s.vy)
  
  acc>>=2
  local b=0
  if get_map((xx-8)>>3,(yy-8)>>3)==0 then
   s.vx+=acc
   s.vy+=acc
   b+=1
  end
  
  if get_map((xx+8)>>3,(yy-8)>>3)==0 then
   s.vx-=acc
   s.vy+=acc
   b+=1
  end
  
  if get_map((xx-8)>>3,(yy+8)>>3)==0 then
   s.vx+=acc
   s.vy-=acc
   b+=1
  end
  
  if get_map((xx+8)>>3,(yy+8)>>3)==0 then
   s.vx-=acc
   s.vy-=acc
   b+=1
  end
  
  if b==4 then
   s.vx,s.vy=0,0
  end
  
  s.x+=s.vx
  s.y+=s.vy
  
  s.vx*=0.5
  s.vy*=0.5
  
  local ma=2
  local dv=dist(s.vx,s.vy)
  if dv>ma then
   s.vx*=ma/dv
   s.vy*=ma/dv
  end
 end
 
 if abs(s.vx)>0.1 then
  s.fleft=s.vx<0
 end

end

function take_raft(s)
 local r=collide_objgroup(s,"raft")

 if r then
  s.onraft=true
  s.col=r.col
  s.rafttim=5
  s.x,s.y=r.x,r.y
  s.vx,s.vy=r.pvx,r.pvy
  s.x+=s.vx
  s.y+=s.vy
  s.dir=atan2(s.vx,s.vy)%1
  s.dirt=7+rnd(1)
  
  deregister_object(r)
  return true
 end
end

function upd_bird(s)
 if #s.bds > 0 then
  local d = true
  for b in all(s.bds) do
   b[1]+=b[3]
   b[2]+=b[4]
   if b[1]<_camx-16 or b[1]>_camx+144 or b[2]<_camy-16 then
    del(s.bds,b)
   end
   
   if chance(5) then
    bird_sfx(b[7],1)
   end
  end
  if #s.bds==0 then
   deregister_object(s)
  end
 else
  if max(abs((player.x>>3)-s.mx),abs((player.y>>3)-s.my)) < 6 then
   local x,y=s.mx<<3,(s.my<<3)-4
   local k,c=1+rnd(3.5)
   for i=1,k do
    add(s.bds,{
     x+got(4),y+got(4),
     rnd{1.5,-1.5}+got(.5),
     -0.5-rnd(1.5),
     rnd(9999),ornd(hair),
     42+rnd(16)\1
    })
    bird_sfx(s.bds[i][7],1)
   end
   sfx(18,0)
  end
 end
end

function bird_sfx(tone,ch)
 poke(0x3684,tone|192)
 poke(0x3686,(tone+4)|192)
 poke(0x3688,(tone+4)|192)
 poke(0x36C5,10+rnd(10))
 sfx(17,ch)
end

function upd_moai(s)
 if max(abs(s.x - player.x), abs(s.y - player.y))>80 or s.explo then return end
 sfx(33,2)
 s.explo = true
end


function drw_chr(s)
 if abs(s.x-_camx-64)>72 or abs(s.y-_camy-64)>72 then
  return
 end

 if s.onraft then
  drw_raft(s)
  
  draw_oanim(s.idle,s.x-6,s.y-6,s.fleft,s.plt)
 else
  local dorun=abs(s.vx)+abs(s.vy)>0.1
  draw_oanim(dorun and "run" or s.idle,s.x-4,s.y-8,s.fleft,s.plt)
  
  local n=(time()*20 + (s.k or 0))%8
  if dorun and n>=3 and n<3.666 and stat(19)<0 then-- and n%1<0.666 then
   sfx(s==player and 15 or 16, 3)
  end
 end
 all_colors_to()
end

function drw_sail(x,y,coa,sia,col,var)
 pal(14,col)
 pal(15,drk[col])
 
 local mx=126+var
 for i=30,1,-1 do
  local y=y\1+(i>>2)
  local si=sin(i/60)
  local w=5-2*si
  local f=(6+2*cos(t()>>1))*si
  
  local ax,ay = x-w*coa+f*sia, y-w*sia-f*coa
  local bx,by = x+w*coa+f*sia, y+w*sia-f*coa
  
  local my=16|(i>>5)
  if ay<by then
   ax,ay,bx,by=bx,by,ax,ay
  end
  
  pal(13,5)
  tline(ax,ay+1,bx,by+1,mx,my,.5/w,0)
  pal(13,13)
  tline(ax,ay,bx,by,mx,my,.5/w,0)
 end
 
 pal(14,14)
 pal(15,15)
end

function drw_raft(s)
 if abs(s.x-_camx-64)>72 or abs(s.y-_camy-64)>72 then
  return
 end

 local coa,sia = cos(winda+.25), 0.5*sin(winda+.25)

 spr(0x1e,s.x-8,s.y-4,2,1)

 if coa>=-0.1 then
  spr(0x0d,s.x-4,s.y-12,1,2)
 end
 
 drw_sail(s.x\1,s.y-12,coa,sia,s.col,s.var)

 if coa<-0.1 then
  spr(0x0d,s.x-4,s.y-12,1,2)
 end
end

function drw_item(s)
 if abs(s.x-_camx-64)>72 or abs(s.y-_camy-64)>72 then
  return
 end

 local sp,x,y=0x70+s.s,s.x-4,s.y-4
 
 all_colors_to(((t()\.25)&1)*7)
 spr(sp,x-1,y)
 spr(sp,x+1,y)
 spr(sp,x,y-1)
 spr(sp,x,y+1)
 all_colors_to()
 spr(sp,x,y)
end


local brdan=split"0x53,0x52,0x51,0x50,0x52"
function drw_bird(s)
 for b in all(s.bds) do
  pal(14,b[6])
  pal(6,lit[b[6]])
  spr(brdan[((time()/.05+b[5])\1)%#brdan+1],b[1],b[2],1,1,b[3]<0)
 end
end

local tcols="\2\3\7\7\7\7\7\7\7\3\2\1"
function drw_text(s)
 s.l+=.5
 
 local c=ord(tcols,s.l)
 super_print(s.str, s.x, s.y+4*sin(s.l/30), c or 0)
 
 if not c then
  deregister_object(s)
 end
end

function drw_moai(s)
 if max(abs(s.x-_camx-64),abs(s.y-_camy-77))>80 then
  return
 end

 spr(0x80+(s.sp&3)*3, s.x-12, s.y-29, 3, 4, s.sp>=4)
end


function new_player(x,y)
 local s={
  x=x,y=y,
  w=6,h=6,
  vx=0,
  vy=0,
  onraft=true,
  rafttim=0,
  col=14,
  rdt=0,
  var=1,
  tc=14,
  hr=2,
  raftcol=14,
  idle="idle1",
  skn=ornd(skin),
  items={2},
  update=upd_player,
  draw=drw_chr,
  regs="to_update,to_draw2"
 }
 
 s.plt={[6]=s.skn,[2]=s.hr,[3]=lit[s.hr],[14]=s.tc}
 
 return register_object(s)
end

function new_raft(chr)
 local s={
  x=chr.x,
  y=chr.y,
  pvx=-chr.vx,
  pvy=-chr.vy,
  w=1,h=1,
  col=chr.col,
  var=chr.var,
  draw=drw_raft,
  regs="to_draw1,raft"
 }
 
 return register_object(s)
end

tunics="\14\13\12\2\3\9\10\11"
function new_bot(x,y)
 local s={
  x=x,y=y,
  w=16,h=16,
  vx=0,vy=0,
  onraft=true,
  toraft=0,
  rafttim=0,
  var=irnd(2),
  dir=rnd(1),
  dirt=0,
  idle=srnd "idle1,idle2,idle3",
  skn=ornd(skin),
  tone=irnd(20),
  k=rnd(),
  rdt=0,
  hist={},
  histt=0,
  stx=x,sty=y,
  
  vain=chance(75),
  forth=chance(40),
  frdly=chance(10),
  
  update=upd_bot,
  draw=drw_chr,
  regs="to_update,to_draw2,bot"
 }
 
 if s.frdly then
  s.vain=true
  s.forth=true
 end
 
 repeat s.hr=ornd(hair) until s.hr~=s.skn
 
 s.tc = chance(25) and s.skn or ornd(tunics)
 s.col=s.tc
 
 s.plt={[6]=s.skn,[2]=s.hr,[3]=lit[s.hr],[14]=s.tc}
 
 for i=0,95 do
  s.hist[i]=0
 end
 
 return register_object(s)
end

function new_item(x,y,s)
 register_object{
  x=x,y=y,
  w=8,h=8,
  s=s,
  draw=drw_item,
  regs="to_draw1,item"
 }
end

function new_birds()
 if #objs.bird > 64 then
  return
 end
 
 local mx,my = rnd(2048)\8, rnd(1536)\8
 if get_map(mx,my)&3>0 then
  srand(mx|my>>16)
  if chance(15) then
   register_object{
    mx=mx,
    my=my,
    bds={},
    update=upd_bird,
    draw=drw_bird,
    regs="bird,to_update,to_draw4"
   }
  end
  srand(time()+rnd())
 end
 
end

function new_text(str,x,y)
 register_object{
  x=x,
  y=y,
  l=1,
  str=str,
  draw=drw_text,
  regs="to_draw4"
 }
end

local mospr = split"0,1,2,3,5,6,7"
function new_moai(x,y)
 local spi = #objs.moai == 0 and 1 or (irnd(#mospr)+1)
 mmoai[(x\32)|((y\32)<<6)] = register_object{
  x=x,
  y=y,
  sp=mospr[spi],
  update=upd_moai,
  draw=drw_moai,
  regs="to_draw3,to_update,moai"
 }
 deli(mospr, spi)
end


-->8
-- * face drawing *

hair="\2\4\5\8\9\12\13\14\15"
skin="\15\4\5\6\7"
local skind={[5]=15,[6]=4,[7]=5}
function draw_face(n,x,y,talk,smile,t,sk,hr)
 srand(n)
 
 camera(-x,-y)

 local sk=sk
 local skd=skind[sk] or 0
 
 pal(6,sk)
 pal(4,skd)
 pal(2,hr)
 
 pal(8,0)
 
 local ns=split"0,1,2,1"
 local nt = ((t/0.1)%4)\1
 local tn = talk and ns[nt+1] or 0
 local ty,th
 if tn==0 then
  if smile then
   ty,th=2,4
  else
   ty,th=4,2
  end
 elseif tn==1 then
  ty,th=1,4
 elseif tn==2 then
  ty,th=0,4
 end
 
 local tx = (rnd(3)\1-1)*(nt\2)
 if talk then
  camera(-x-tx,-y-ty)
 else
  camera(-x,-y-ty)
 end
 
 rectfill(5,-1,15,6,6)
 rectfill(0,7,20,17,6)
 rectfill(7,18,20,21,6)
 rectfill(8,20,8,21,4)

 
 spr(0xd0,-3,0) --forehead
 spr(0xd1,15,-1) --backhead
 
 --eye
 if chance(5) then
  spr(0xd3,5,7)
  line(1,6,5,7,0)
  line(13,8,20,8,0)
 
 else
  local e=0xe8+rnd(4)
  local na=(t+rnd(999))%(1.5+rnd(3))
  local nb=(t+rnd(999))%(2+rnd(4))
  local n1=0.1+rnd(0.3)
  local n2=0.4+rnd(2)
  if na<n1 then
   spr(0xd2,6,8)
  elseif nb<n2 then
   spr(e+16,6,8)
  else
   spr(e,6,8)
  end
 end
 
 local nc=(t+rnd(999))%(2+rnd(6))
 local n3=0.4+rnd(2)
 
 palt(6,true)
 spr(0xc0+rnd(4),6,2-(nc<n3 and 1 or 0)) --eyebrow
 palt(6,false)
 
 spr(0xe4+rnd(4),-4,8) --nose
 
 --mouth
 local n=rnd(4)\1
 
 if chance(50) then
  pal(14,skd)
 end
 
 if tn==0 and smile then
  camera(-x,-y)
  spr(0xd8+n,-1,18)
 else
  local sx,sy=32+n*8,120
  sspr(sx,sy,8,th,-1,18)
 
  camera(-x,-y)
  local yy=8-th
  sspr(sx,sy+yy,8,th,-1,18+yy)
 end
 
 pal(14,14)
 
 rectfill(7,22,20,25,6)
 rectfill(0,26,20,28,6)
 rectfill(5,29,20,32,6)
 if ty<4 then
 rectfill(8,22,8,23,4)
 else
  pset(8,23,4)
 end
 
 spr(0xe0+rnd(4),13,33) --neck
 spr(0xf0+rnd(4),-3,28) --chin
 
 if rnd(2)<1 then
  spr(0xc4+rnd(4),5,32) --beard
 else
  pset(12,33,4)
 end
 
 --hair
 if talk then
  camera(-x-tx,-y-ty)
 else
  camera(-x,-y-ty)
 end

 if rnd(5)>=1 then
  for i=0,3 do pal(1<<i,6) end
  local n=rnd(4)\1
  for i=1,15 do
   if i&(1<<n)>0 then
    pal(i,hr)
   else
    palt(i,true)
   end
  end
  
  spr(0xcc,-4,-12,4,4)
 end
 poke(0x5f5e,0xff)
 
 palt(6,false)
 palt(4,false)
 pal(6,sk)
 pal(4,skd)
 spr(0xd4+rnd(4),14,10)--ear
 
 --pset(0,0,3)
 
 camera()
 for i=1,15 do pal(i,i)palt(i,false)end
 pal(0,0)
end
-->8
-- * objects handling *
function init_objects(groups)
 objs={to_update={}}
 for i=0,4 do
   objs["to_draw"..i]={}
 end
 for name in all(groups) do
  objs[name]={}
 end
end

function objects_call(grp, method)
 local tbl = grp and objs[grp]
 for obj in all(tbl) do
  if obj[method] then
   obj[method](obj)
  end
 end
end

function update_objects()
 local tbl = objs.to_update
 for obj in all(tbl) do
  obj:update()
 end
end

function draw_objects(start,finish)
 start,finish=start or 0,finish or 4
 for i=start,finish do
  local dobjs=objs["to_draw"..i]

  for obj in all(dobjs) do
   obj:draw()
  end
 end
end

function collide_objgroup(obj,groupname)
 for obj2 in group(groupname) do
  if obj2~=obj and collide_objobj(obj,obj2) then
   return obj2
  end
 end

 return false
end

function collide_objobj(obj1,obj2)
 return (abs(obj1.x-obj2.x)<(obj1.w+obj2.w)/2
     and abs(obj1.y-obj2.y)<(obj1.h+obj2.h)/2)
end

function register_object(o)
 for reg in all(split(o.regs)) do
  add(objs[reg],o)
 end
 return o
end

function deregister_object(o)
 for reg in all(split(o.regs)) do
  del(objs[reg],o)
 end
end

function group(name) return all(objs[name]) end
-->8
-- * utilities *

local _camera=camera
function camera(x,y)
 if not x then
  _camx,_camy=0,0
 else
  _camx,_camy=x,y
 end
 _camera(_camx,_camy)
end

function all_colors_to(c)
 if c then
  pal({c,c,c,c,c,c,c,c,c,c,c,c,c,c,c})
 else
  pal(split"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15")
 end
-- for i=0,15 do
--  pal(i,c or i)
-- end
end

function angle_diff(a1,a2)
 return (a2-a1+0.5)%1-0.5
end

function merge_arrays(ard,ars)
 for k,v in pairs(ars) do
  ard[k]=v
 end
 return ard
end

function got(a) return rnd(a*2)-a end
function lerp(a,b,i) return (1-i)*a+i*b end
function dist(x,y) return sqrt(x*x+y*y) end
function sqr(a) return a*a end
function chance(a) return rnd(100)<a end
function ornd(str) return ord(str,rnd(#str)+1) end
function srnd(str) return rnd(split(str)) end
function irnd(n) return rnd(n)\1 end

-->8
-- * map stuff *

--sndflp,grsflp,
rpls,wavs={},{},{},{}

function gen_map()
 cls()
 camera(-32,-40)
 for i=0,29 do
  local w,h=3+rnd(8)\1,3+rnd(8)\1
  local x,y=2+rnd(60-w),2+rnd(44-h)
  
  ovalfill(x,y,x+w,y+h,1)
--  flip()
 end
 
 for i=0,1999 do
  local x,y = 2+rnd(60),2+rnd(44),3
  if pget(x,y)==1 then
   if pget(x-1,y)*pget(x+1,y)*pget(x,y-1)*pget(x,y+1)==0 then
    pset(x,y,0)
   end
  end
  
--  if i%500==0 then
--   flip()
--  end
 end
 
 for y=0,47 do
  for x=0,63 do
   local mx,my=x|((y&0x20)<<1),y&31
   if pget(x,y)==1 then
    mset(mx,my,pget(x-1,y)+(pget(x+1,y)<<1)+(pget(x,y-1)<<2)+(pget(x,y+1)<<3))
   else
    mset(mx,my,0)
   end
  end
 end
 
 local i=6
 while i>0 do
  local mx,my = irnd(63), irnd(47)
  
--  if mget(mx,my)&10>0 and mget(mx+1,my)&9>0 and mget(mx,my+1)&6>0 and mget(mx+1,my+1)&5>0 then
  local mmx, mmy = mx|((my&0x20)<<1),my&31
  if mget(mmx, mmy)==15 then
   local x,y = (mx+.5)*32,(my+.5)*32
   local d = 64 --> calculate min tile dist
   for m in group"moai" do
    d=min(d,dist((m.x-x)/8, (m.y-y)/8))
--    d=min(d,min(abs(m.x-x), abs(m.y-y)))
   end
   if d>12 then
    mset(mmx,mmy,16)
    new_moai(x,y)
    i-=1
   end
  end
 end
 
-- camera(0,-48)
-- for y=0,31 do
--  for x=0,127 do
--   pset(x,y,mget(x,y))
--  end
--  flip()
-- end
 
 sndflp={[0]=0x0102,0x0204,0x0408,0x0801}
 grsflp={[0]=0x8260,0x14c0,0x2890,0x4130}

 wavflp={[0]=0x5050,0xa0a0,0x5050,0xa0a0}
 wtrflp={[0]=0xefbf,0xdf7f,0xbfef,0x7fdf}
end

function get_map(mx,my)
 local mmx,mmy=mx\4,my\4
 if mmx<0 or mmx>63 or mmy<0 or mmy>47 then
  return 0
 end

 local n=mget(mmx|((mmy&0x20)<<1),mmy&31)&0xf
 if n==0 then return 0 end
 return sget((n<<2)|(mx&3),my&3)
end

mnmt=0
function draw_minimap(x,y)
 camera()
 fillp(~0x5050)
-- rectfill(0,0,127,127,0)
 circfill(x,y,112,0)
 fillp()

 x-=32
 y-=24
 
 rectfill(x-4,y-4,x+67,y+51,12)
 pal(1,0)
 
 spr(0x4e,x-12,y-12)
 spr(0x4f,x+68,y-12)
 spr(0x5e,x-12,y+52)
 spr(0x5f,x+68,y+52)
 
 for i=0,6 do
  local y=y-4+(i<<3)
  spr(0x4a|(i&1),x-12,y)
  spr(0x4c|(i&1),x+68,y)
 end
 
 for i=0,8 do
  local x=x-4+i*8
  spr(0x5a|(i&1),x,y-12)
  spr(0x5c|(i&1),x,y+52)
 end
 
 spr(0xcb,x+61,y-6)
 
 local flp={[0]=‚ñë,0,0,0,0,0,0,0,0,0,0,0,0,0,0,‚ñí&0xffff}
 
 camera(-x,-y,true)
 local n=0
 for y=0,47 do
  for x=0,63 do
   local m=mget(x|((y&0x20)<<1),y&31)
   if m&0x80>0 then
    m&=0xf
    fillp(flp[m])
    color(m==0 and 0xcd or 0x45)
    pset(x,y)
    n+=1
    
    local s = mmoai[x|(y<<6)]
    if s then
     spr(s.explo and 0xca or 0xc8, x-3, y-7)
    end
   end
  end
 end
 
 pctg=n/3072*100
 local str=sub(tostr(pctg),1,4).."%"
 print(str,2,47,4)
 
 mnmt+=0.066
 spr(0xc9,player.x\32-3,player.y\32-7-(mnmt&1))
 
 fillp()
-- camera()
 pal(1,1)
 
 local x=-12
 local y=56
 for itm in all(player.items) do
  local s=0x70+itm
  all_colors_to(0)
  spr(s,x-1,y)
  spr(s,x+1,y)
  spr(s,x,y-1)
  spr(s,x,y+1)
  all_colors_to()
  spr(s,x,y)
  x+=6
 end
 
end

local mcst,mbf,mmx,mmy={[0]=0,[16]=8},{}
local function ite_tiles(w,h,mask,foo) -- ! only use even w and h
 local mx=mmx-(w>>1)+8
 local my=mmy-(h>>1)+8
 
 for cy=my,my+h do
 for cx=mx,mx+w do
 
   local n = cx|(cy>>16)
   local m=mbf[n]
   
   if not m then
    local ccy=cy>>2
    local ch=mget((cx>>2)|((ccy&0x20)<<1),ccy&31)&0x1f
    m=mcst[ch] or sget((ch<<2)|(cx&3),cy&3)
    mbf[n]=m
    
    if m>0 then
     lndn+=1
    end
   end
   
   if m&mask>0 then
    local x,y=cx<<3,cy<<3
    srand(n)
    foo(x,y,m)
   end

 end
 end
end

function draw_map(mx,my)
 mbf={}
 mmx,mmy = mx,my
 
 local flx=_camx&3
 local fly=_camy&3
 
 local function tfillp(tbl)
--  if not tbl then cls(4) flip() return end
  local n=(tbl[flx]<<>(fly<<2))|(tbl[flx]<<>((fly<<2)|16))&0xffff
  fillp(n)
  return n
 end

 local t=time()

 local sr=1-5*sin(((t>>4)+0.1)&0x.7fff)

-- fillp((wavflp[flx]<<>(fly<<2))|(wavflp[flx]<<>((fly<<2)|16))&0xffff)
 tfillp(wtrflp)
 color(0x21)
 local co=cos(t>>2)*8
 
 if mx<2 or mx>=63 then
  rectfill(_camx-1,_camy-1,co,_camy+128)
  rectfill(2048-co,_camy-1,_camx+128,_camy+128)
  
  if my<2 then
   rectfill(_camx-1,_camy-1,64,64)
   rectfill(1984,_camy-1,_camx+128,64)
   color(0x22)
   circfill(64,64,64-co)
   circfill(1984,64,64-co)
   color(0x21)
  end
  
  if my>=47 then
   rectfill(_camx-1,1472,64,_camy+128)
   rectfill(1984,1472,_camx+128,_camy+128)
   color(0x22)
   circfill(64,1472,64-co)
   circfill(1984,1472,64-co)
   color(0x21)
  end
 end
 
 if my<1 then
  rectfill(_camx-1,_camy-1,_camx+128,co)
 end
 if my>=48 then
  rectfill(_camx-1,1536-co,_camx+128,_camy+128)
 end
 
 tfillp(wavflp)
 color(0x32)
 ite_tiles(22,22,4,function(x,y)
  circfill(x|4,y|4,18+rnd(4)+sr)
 end)

 fillp()
 color(3)
 
 ite_tiles(20,20,4,function(x,y)
  circfill(x|4,y|4,14+rnd(4)+sr)
 end)
 
 srand(t)
 if chance(50) then
  local x=_camx-16+rnd(160)
  local y=_camy-16+rnd(160)
  add(wavs,{l=0,x=x-4,y=y,w=sgn(got(1)),f=chance(5)})
 end
 
 for w in all(wavs) do
  if w.f then
   spr(0x78+w.l,w.x\1+w.w*w.l,w.y,1,1,w.w<0)
   w.l+=.33
  else
   sspr((w.l\1)<<3,7,8,1,w.x,w.y)
   w.l+=.125
  end
  
  if w.l>=8 then del(wavs,w) end
 end
 
 local fw1=tfillp(wtrflp)|0b.1
 o,flx=flx,(flx+2)&3
 local fw2=tfillp(wtrflp)|0b.1
 flx=o

 for r in all(rpls) do
  local rr=min(r.l*.5+5,7)
  fillp(fw1)
  circ(r.x,r.y,rr,3)
  fillp(fw2)
  circ(r.x,r.y,rr,7)
  
  r.l+=0.125
  
  if r.l+4>14 then
   del(rpls,r)
  end
 end

 local sr=1-4*sin((t>>4)&0x.7fff)

 tfillp(sndflp)
 color(0xdc)
 ite_tiles(20,20,4,function(x,y)
  circfill(x|4,y|4,6+rnd(4)+sr)
 end)
 
 tfillp(grsflp)
-- fillp((grsflp[flx]<<>(fly<<2))|(grsflp[flx]<<>((fly<<2)|16))&0xffff)
 color(0xba)
 ite_tiles(18,18,3,function(x,y,m)
  if m==9 then
   circfill(x|4,y|4,6+rnd(4),0x9a)
  else
   circfill(x|4,y|4,6+rnd(4),0xba)
  end
 end)
 
 fillp()
 local camxa=_camx-40
 local camya=_camy-16
 local camxb=_camx+136
 local camyb=_camy+140
 
 pal(7,9)
 ite_tiles(18,18,3,function(x,y,m)
  if chance(15) then
   x+=rnd(4)
   y+=rnd(4)
   spr(0x40+rnd(4),x+2,y-2,1,1)
  elseif chance(15) then
   spr(0x61+rnd(15),x+rnd(2)+3,y+rnd(2)+3,1,1,chance(50))
  end
 end)

 pal(7,7)
 pal(8,8)
 pal(10,10)
 pal(11,11)
end

function draw_leaves(mx,my)
 local t=time()

 local wp=1+cos(t*0.25)
 local wc=wp*cos(winda)
 local ws=wp*0.5*sin(winda)
 pal{[8]=8,[10]=9,[11]=10}
 
 local wws={}
 for i=0,3 do
  wws[i]=.25+.75*cos((.5+(i>>2))*t)
 end
 
 pal(7,8)
 ite_tiles(18,18,3,function(x,y,m)
  if chance(15) then
   x+=rnd(4)
   y+=rnd(4)
   local pw=wws[rnd(4)\1]
   spr(0x44+((rnd(3)\1)<<1),x-2+pw*wc,y-10+pw*ws,2,2,rnd(2)<1)
  end
 end)
 
 pal{[7]=7,[8]=8,[10]=10,[11]=11}
end
-->8
-- * anims *
anims={
 run={s=0x20,n=16,spd=20},
 idle0={spd=2,"\16\16\16\21"},
 idle1={spd=5,"\16\16\17\18\19\18\17\18\19\20"},
 idle2={spd=12,"\16\16\48\49\50\50\50\51\51\52\53\54\55\48\48\16"},
 idle3={spd=12,"\16\16\56\57\57\58\58\58\59\59\60\60\59\59\59\61\61\59\59\59\60\59\61\59\60\60\59\59\59\59\62\63\48\49"}
}

function draw_oanim(name,x,y,flip,plt)
 local nfo=anims[name]
 local s
 local t=time()*nfo.spd
 
 local str=nfo[1]
 
 if str then
  local n=t%#str
  s=ord(str,n+1)
 else
  local n=t%nfo.n
  s=nfo.s+n
 end
 
 all_colors_to(0)
 spr(s,x-1,y,1,1,flip)
 spr(s,x+1,y,1,1,flip)
 spr(s,x,y-1,1,1,flip)
 spr(s,x,y+1,1,1,flip)
 all_colors_to()
 if plt then pal(plt) end
 spr(s,x,y,1,1,flip)
end

-->8
-- * item names *

items=split("cOCONUT,bIG fRUIT,rUM,bIG fLOWER,jEWELRY,bLUE cRYSTAL,gOLD tABLET,gOLDEN sKULL")

